Notes for acloud.guru AWS Solution Architect Associate training







Availability Zone == Data Center, can have multiple DCs in an AZ

Region: geographical area, each Region consists of 2 or more AZ.

Edge Location: endpoints for AWS which is used to cache content i.e. CloudFront (CDN)


Main course topics: compute, storage, databases, network, content delivery, security, IAM, compliance


## Identity and Access Management / S3

IAM: manage users and level of access to AWS Console



IAM Features: 
    - Centralized controle of AWS Account
    - Shared access to your AWS Account
    - Granular perms
    - Identity Federation (including Active Directory, Facebook, LinkedIn)
    - Multifactor Authentication
    - Provide temproary access for users / devices / services
    - Password rotation policy
    - Integrates with AWS services
    - Supports PCI DSS Compliance


Key IAM Aspects: 
    Users:    end users sucha as people, employees etc
    Groups:   collection of users, each user in the group will inherit the permissions of the group
    Policies: policies made up of policy documents (JSON that gives perms to what a User, Group, or Role is able to do)
    Roles :   create roles and assign to resources



## IAM LAB

> Console > Search > IAM
Upper right shows login console: 

https://iamwhatiam.signin.aws.amazon.com/console

NOTE:  I changed it to knotknull for the alias:
https://knotknull.signin.aws.amazon.com/console


Root Account:  Account that created the AWS account == "God Mode"

Policies > choose a police (i.e. Administrator Access), click on "+" for JSON: 
{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Allow",
            "Action": "*",
            "Resource": "*"
        }
    ]
}

- IAM is universal, does not apply to regions
- root account has full Admin Access
- new user has not access, can add console and programtic access

# billing alarm
CloudWatch > Alarms > Billing > Create Alarm


 - Create SNS topics
 - add email (confirm)

subscription to topic: 
 arn:aws:sns:us-east-1:709596356054:aws_billing_alarm:368bbef4-b4e2-4f70-b103-ab42cfb544d6


Take away:  use CloudWatch to create a billing alarm via SNS topic


## S3 

Simple Storage Service 
- object storage
    - key (name) / value (data)
    - version ID
    - metadata
    - ACLs
    - toreents

- data spread across multiple devices / facilities
- size: 0 bytes to 5TB files **
- unlimited storage
- files stored in buckets (think folder)
- universal namespace: must be globally unique
- successful upload:  HTTP 200 code
NOTE: not suitable for installing an OS on 


# S3 Consistency:
    - Read after Write for PUTS of new objects
    - Eventural Consistency for overwrite PUTS and DELETES (propogates)
        - could get older version or deleted file


# S3 Versioning: 
    Can version buckets and suspend versioning:
    - versioning give a version to each new put a key
    - suspending versioning makes the version id null 
        - if there versions without a null version id they will remain
        - putting a new entry with a key that has a null will overwrite the null key version
    - MFA Delete
    - Encryption

# S3 Guarantees:
    - 99.9% Availability **
    - 99.9999999999% Durability **    (11 9's )


# S3 Storage Classes

- S3 Standard
    - 99.99 Availability / 99.9999999 durability
        - stored redundantly across multiple devices / multiple facilities 
            - sustain loss of 2 facilities concurrently

- S3 IA (infreqeuently accessed)
    - less frequent access
    - requires rapid access when needed
    - lower fee than S3, charged retrieval fee


- S3 One Zone - IA (infreqeuently accessed)
    - low cost IA
    - don't require multiple AZs resiliency
NOTE: was known as RRS (Reduced Redundancy Storage)


- S3 Intelligent Tiering
    - optimize costs by automatically moving data to most cost effective access tier,
        - no performance impact / no operational overhead

- S3 Glacier
    - low cost storage for data archiving
        - retrieval time from minutes to hours

- S3 Deep Archive
    - lowest cost storage 
        - retrieval time 12 hours



**          S3 Standard     S3 Intelligent-Tiering      S3-IA       S3-One Zone IA      S3 Glacier      S3 Deep Archive
durability      11 9s               11 9s               11 9s           11 9s               11 9s               11 9s
availability    99.99               99.99               99.99           99.95               N/A                  N/A 
SLA             99.99               99                  99              99                  N/A                  N/A 
AZ zones         >=3                >=3                 >=3              1                  N/A                  N/A                   
Min Charge       N/A                N/A                128 kb          128 kb               40 kb                40 kb            
Min Duratio     N/A                30 days            30 days         30 days              90 days              180 days
Retrieval Fee   N/A                 N/A               per GB          per GB               per GB               per GB
1st byte latency  ms                 ms                 ms                ms               min - hr             hours


S3 Charges: 
- storage
- requests
- management priceing (tiers)
- data transfer
- transfer acceleration
    - use CloudFront to speed up bucket transfers
- cross region replication



Buckets viewed globally but can be housed regionally

Access:   **
    - Bucket Policies: applies across the entire bucket
    - Object Policies: applies to individual files
    - IAM policies to Users and groups: applies to users / groups


# S3 pricing
    - storage
    - requests / data retrieval
    - data transfer
    - mgmt & replication

S3 and S3 Intelligent Tiering is same for frequent access, less for IA tier
cost hierarchy: 
    S3 Std > S3 IA > S3 IA > S3 One Zone IA > Glacier > Glacier Deep Archive  **


# S3 Security / Encryption

    - Bucket Policies
    - ACL (to object)

S3 buckets can be configured to create access logs make to bucket.

Encryption in Transit 
    - SSL / TLS (https)

Encryption at Rest 
 - Server Side
    - S3 Managed Keys - SSE-S3: Amazon manages keys
    - AWS Key Management Service, Managed Keys - SSE-KMS: manage keys with AWS Key Management Service
    - Server Side Encryption w/ Customer Provided Keys:  SSE-C
    - NEW: Dual-Layer server-side encryption with AWS KMS Service Keys (DSSE-KMS)

 - Client Side Encryption
    - customer encrypts and uploads

Can encrypt individual objects and at bucket level.


# S3 Versioning 
    - stores all versions of an object (soft delete)
    - once enabled, CANNOT DISABLE, only suspend  **
    - lifecycle rules
    - MFA Delete


Note: latest version is available (can be made public)
      - lower versions not made available/public unless specifically made so
      DELETING the DELETE MARKER makes most recent version available  **

# S3 Lifecycle Rules
    - Automates moving objects between storage tiers 
        - can be used w/ versioning 
        - current and prior versions
buckets > bucket > management > lifecycle configuration > create rule 

# S3 Object Lock & Glacier Vault Lock
    Object Lock: write once, ream many (WORM)
        - prevent object from being deleted / modified for fixed amount of time or indefinitely 

        - Governance Mode: users can't overwrite or delete and object version or alter lock settings  **
                - special perms needed

        - Compliance Mode: protected object version can't be overwritten or deleted by ANY USER (including root user)  **
            - ensures object version can't be overwritten or deleted for the duration of the retention period (i.e. 7 Years)

        retention period: protects object version for fixed amount of time  
            - timestamp of expiration kep in version metadata

        - Legal Hold: prevents an object version from being overwritten or deleted
                - does not have a retention period.  In place until removed
                - can be applied / removed with s3:PutObjectLegalHold perm

    Glacier Vault Lock: deploy and enforce compliance controls for individual S3 Glacier Vaults 
            with Vault Lock Policy. 
                - specify controls in a Vault Lock Policy
                    - policy locked from future edits
- Object Lock == WORM
- Object Lock applied to objects or bucket
- governance mode and compliance mode
- Glacier Vault Lock = compliance controls for Glacier Vaults
    - Vault Lock policy locked for edits



# S3 Performance
    S3 Prefix:   between bucket name and object name 
        i.e.  /bucketname/folder1/subfolder2/xyz.txt  >> Prefix = /folder1/subfolder2


S3 latency:  1st byte within 100 - 200 ms

Throughput Requests can achieve: 
    - 3500 PUT / COPY / POST / DELETE   per PREFIX  **
    - 5500 GET/HEAD requests per second per PREFIX  **


NOTE: can get better performance by spreading reads across different prefixes i.e.:
    - 2 prefixes (/folder1/subfolder2) 11,000 requests / sec
    - 4 prefixes (/folder1/subfolder2/dir1/dir2 ) 22,000 requests / sec

MORE PREFIXES == BETTER PERFORMANCE !!  **

SSE-KMS Quotas: 

 - KMS Request rates: 
    - SSE-KMS has KMS limits 
        - upload   file:  GenerateDataKey in KMS API
        - download file:  Decrypt in KMS API

KMS Quota is region specific **
    - 5500 or 10k or 30k requests per second  **

NOTE: CANNOT REQUEST QUOTA INCREASE FOR KMS 


Uploads

    Multi-part uploads:
        - recommended for files over 100 MB  **
        - required for files over  5 GB   

Downloads:
    S3 Byte-Range fetches: 
        - parallelize downloads by specifying byte ranges
        - can speed up downloads
        - download partial file

# S3 Select & Glacier Select
    S3 Select:  retrieve subtset of data from object using simple SQL expressions
        - retrieve only data you need
            - performance increase 
                - up to 400% faster  ** 
                - up to 80% cheaper

    Glacier Select:  Similar to S3 Select but run against Glacier

# AWS Organizations and Consolidated billing

AWS Organizations: account management service that enables you to consolidate multiple AWS accounts 
    into an organization to centally manage. 
    Accounts under organization unit under ROOT  with policies at the OU and account
OU = Organizational Unit

{Organization}
---------------
[Policy]    [ROOT]          
      |   /        \   +---[Policy]              [Policy]
     [OU]           \  |                            /
    /    \           [OU]----------------------+   /       
[Account]  \           |                       |  /
             [OU]    [Account]                [OU]---------+
           /      \                          / |           |
     [Account]    [Account]         [Account] [Account] [Account]      

Consolidated Billing: 
    - Paying account (cannot access sub resources) linked to AWS accounts


                        +------[Test/Dev]
                        |
    [Paying Account] ---+------[Production]
                        |
                        +------[Back Office]

Consolidates usage for volume discounts

- Root Account should always have MFA
- Paying account should be for billing only 
    - do no deploy resources to paying account
- Service Control Policies on OU or individual account  **
    - enable / disable AWS Services


# Share S3 Buckets Across Accounts
    - 3 ways to share S3 Buckets across acounts  **
        1. Bucket Policies and IAM
            - across the entire bucket
            - programatic access only
        2. Bucket ACLs and IAM 
            - individual objects
            - programatic access only
        3. Cross-account IAM Roles
            - programatic access 
            - console access 

IAM > Roles > Create Role
    - Another AWS Account
    - Attach permission policies to role
        i.e. AmazonS3FullAccess
    - Role Name > Create Role

NOTE:  Give this link to users who can switch roles in the console   **
    user logs in an clicks "Switch Role" under id or use link


# Bucket replication
S3 > buckets > bucket > Replication Rule > Create Replication Rule

NOTE: Source and replicated buckets need to be versioned !! **
    - Detele markers are not replicated 
    - Permissions on source bucket will replicate across regions

# S3 Transfer Acceleration
    - utilizes CloudFront Edge Network to accelerate uploads
        - use distinct URL to upload to edge location which is then transfered to S3


# DataSync
    - move large amounts of data to AWS
    - AWS DataSync Agent  (on prem)
    - locally connects to NAS or SMB filesystem
        - copy to AWS 
        - write from AWS 
    - Connects to AWS Services: 
        - S3
        - EFS
        - FSx for Windows File Server
    - Hourly, daily or weekly
NOTE: can replicate EFS to EFS 


# CloudFront
 - Content Delivery Network
    - pushes contact to local Points of Presence
    - Edge Location:  where content is cached
        - Can Read and Write to Edge Locations
    - Origin       :  Origin of all files distributed via ECN
        - bucket
        - ec2 instance 
        - ELB
        - Route 53
    - Distributon  :  Name of the CDN
        - collection of Edge Locations

    - Can deliver:
        - Static
        - Dynamic
        - Streaming
        - Interactive content

    - Objects cached for the TTL (Time To Live) 

    Web Distribution:  Used for websites
    RTMP :  Media Streaming

NOTE: Can clear cached objects, will be charged


Can restrict access via signed URLs or signed cookies

Domain Name created for Cached Content
i.e. https://d16s698dkl8k6u.cloudfront.net

https://d16s698dkl8k6u.cloudfront.net/README.txt

NOTE:  can invalidate the Distribution:  CloudFront > Distributions > Invalidations


# CloudFront Signed URLs and Cookies

    - Signed URLs  :  1 file   = 1 URL
    - Signed Cookie:  1 cookie = multiple files


Attach policy to 
    - URL Expiration
    - IP Ranges
    - Trusted Signers (which AWS accounts can create signed URLS)


Origin Access Identity (OAI):  
    - users access CloudFront which then access S3 bucket via OAI 


CloudFront SDK generates Signed URL

    - key pari of Signed URL is account wide (managed by ROOT)

S3 Signed URL 
    - request as IAM user who creates presigned URL 
    - limited lifetime

Origin is EC2 use CloudFront
Origin is S3  use S3 Signed URL


# Snowball
    - Petabyte scale data transport solutions 
    - import / export to S3
    - secure appliances to transfer large amounts of data into / out of AWS
        - addresses high network costs
        - long transfer times
        - security
        - 1/5th cost of high speed Internet

50TB / 80TB
    - 256 bit encryption
    - Trusted Platform Module
    - Once transferred, AWS wipes

Snowball Edge 
    - 100TB onboard storage and compute
    - can use lambda functions
    - applications can run when can't access cloud
    - portable AWS

Snowmobile 
    - Exabyte-scale data transfer
    - 100 PB per Snowmobile (45ft trailer)



# Storage Gateway
    - services that connects on prem software appliance with cloud storage.
    - secure integration between onprem and AWS storage
    - can be software or physical device
    - download as virtual machine
        - VMWare ESXi
        - Microsoft Hyper-V

3 Types: 
    File Gateway  :  NFS & SMB     (files)
        - files stored as S3 objects 
        - access ad NFS mount
        - perms / timestampes are S3 metadata

    Volume Gateway:                 (drive images)
        - iSCSI
        - stored volumes
            - store primary data locally 
            - async backups to AWS
            - backup to S3 as EBS snapshots  (1GB - 16 TB)  **
        - cached volumes
        - asynchronouse backup as point-in-time snapshots (deltas)
        - stored as EBS snapshots

        - cached volumes
            - use S3 as primary data storage
            - frequently accessed data is stored locally
                - caches frequently used data
            - upto 32 TB volumes and attach as iSCSI
                - 1GB to 32 TB

    Gateway Virtual Tape Library  :
        - VTL (Virtual Tape Library)
        - media changer and tape drives preconfigured
        - backup applicatons can use
        - virtual tapes to S3

# Athena vs Macie

Athena:
    - Query S3 data with standard SQL
    - Serverless
    - Pay per query / per TB scanned
    - query log files
    - reports off of S3
    - query clickstream data

Macie:
    - Security services that uses ML / NLP to discover sensitive data in S3 
    - Uses AI to check if S3 has senstivie data, PII
    - dashoboard, reports, alerts
    - analyze CloudTrail logs
    - PCI-DSS use case / prevent ID theft

S3 & IAM Summary

IAM: 
    - Users
    - Groups
    - Roles
    - Policies
    - Universal, not region specific
    - Root Account has Admin
    - New Users 
        - have NO permissions
        - Assigned Access Key and Secret Access Keys  (view once)

S3:
    - Object based
    - 0 Bytes to 5 TB
    - Universal name space, globally unique
    - HTTP 200: upload successful
    - Bucket Policies: across all objects in Bucket
    - ACL: individual objects (files)
    - Can be setup to generate access logs
    - Attributes: 
        - Key
        - Value
        - Verison ID
        - Metadata
        - Subresources:
            - ACL / torrents
    - Consistency: 
        - Read after Write for PUTS new Objects
        - Eventual consistency for overwrite PUTS / Deletes
    S3 Standard    
    - Availability 
        - 99.99   (4 9's)
    - Durability:  
        - 99.999999999 (11 9's)
    S3 IA: Infrequently Accessed / less frequent / rapid access
    S3 IA One Zone:  just 1 AZ
    S3 Intelligent Tiering :  Mchine learning to migrate data to cost-effective tier
            - no performance impact or operational overhead
    S3 Glacier:  Low cost data archival / retrieval minutes to hours
    S3 Glacier Deep Archive: Archival, retrieval up to 12 hours
        - lowest cost storage class

    Cost hierarchy: 
        - S3 Std
        - S3 IA
        - S3 Intelligent Tiering
        - S3 One Zone - IA     NOTE: can lose your data
        - S3 Glacier
        - S3 Glacier Deep Archive

    Encryption In Transit: 
        - SSL / TLS


    Encryption At Rest: 
        - SSE - S3  Server Side Encryption
        - SSE - KMS utilizing Key Management Service
        - SSE - C: Customer Proided Keys 
        - Client Side Encryption

    Organization: 
        - bucket from one account to another
        - Server Control Policies:
            - on Organization Unit (OU) 
            - individual accts


    Share S3 Buckets across accounts
        - Bucket Policy & IAM
            - entire bucket
            - programmatic only
        - ACLs & IAM
            - individual objects
            - programmatic only
        - Cross Acount Roles 
            - programmatic 
            - console


Cross Region Replication 
    - Versioning MUST BE ON at source and target
    - existing files not replicated automatically
    - DELETE MARKERS ARE NOT REPLICATED
    - Delete individual versions will not be replicated

Lifecycle Policies:
    - Automate moving objects to different storage tiers
    - Can be used with versioning

S3 Transfer Acceleration
    - utilizes CDN 

CloudFront: 
    - CDN
    - Edge Location: location where content is cached
    - Origin:  origin of all content
        - S3, EC2, ELB, Route53
    - Distribution:  Name of CDN
    Types:
        - Web Distribution: web content
        - RTMP: Media Streaming
    Edge Locations can be read / write
    Objects cached for TTL

Snowball:
    - Disk appliance to move data in /out of S3
    - import to S3
    - export from S3


Storage Gateway:  agent installed on prem
    File Gateway  : flat files stored on S3

    Volume Gateway: iSCSI / disk volumes
        Stored Volumes: entire dataset stored on site and is asyn backed up to S3
        Cached Volumes: entire dataset on S3 and more frequently accessed is cached locally 

    Gateway Virtua Tape Library: backup to S3


Athena: 
    - query S3 using SQL
    - serverless
    - analyse log data in S3


Macie: 
    - uses ML / NLP / AI to idetnify PII in S3
    - analyze CloudTrail logs
    - dashboard, reports, alerts
    - PCI-DSS compliance


A Deny in a policy will override an Allow that user may have



## EC2 
- Elastic Cloud Compute: Virtual Machines in Cloud
     pricing:
        - on demand: fixed rate by the hour with no commitment

        - reserved : capacity reservation ata a discount on hourly charge (1 to 3 year terms)
                        - Standard Reserved: up to 75% off on demand
                        - Convertible Reserved: up to 54% on demand 
                                - can change instance types as long as instance is equal or greater value
                        - Scheduled Reserved: up to 54% on demand 
                                - time window of reservation
                                - match capacity to a recurring schedule

        - spot     : bid what you will pay for insance capacity
                        can lose instance at any time 

        - dedicated host: physical EC2 server dedicated for your use.
            - regulatory that does not allow multi-tenant virtualization
            - licensing the does not support cloud deployments
            - can be purchased on-demand (hourly)
            - purchased as reservation up to 70% off

EC2 Intances Mnemonic:  Fight Dr. McPixiez AU
F - FPGA
I - IOPS 
G - Graphics
H - High Thruoughput disk
T - T2 Micro (cheak general purpose)
D - Density
R - RAM
M - Main choice for general purpose apps
C - Compute
P - Graphics (think Pics)
X - Extreme Memory
Z - Extreme Memory and CPU
A - Arm-based workloads
U - Bare Metal


security group is a "virtual firewall"

Termination Protection turned off by default 

Root EBS volume will be default deleted when instance terminated
    - Root valume can be encrypted


# Security Groups

- firewall for a resource 
    - change to a security group rule takes place immediately
    NOTE: security groups are STATEFULL 
            - creating an inbound rule will allow for the corresponding outbound rule 
                i.e. HTTP / 80 IN will automatically allow HTTP / 80 OUT 

NOTE:  You can't block a particular port or IP address in a security group, can only do that with NACLs
       Security groups block everything by DEFAULT.

       NACLs are STATELESS, need to create both inbound and outbound rule

- can attach more than one security group to an EC2 instance

- All Inbound  traffic BLOCKED by default
- All Outbound traffic ALLOWED by default
- Security Groups are STATEFUL 
    - those allowed IN are also allowed OUT
- Cannot block specific ports or IP addresses using Security Groups
    - use Network Access Control Lists (NACLs)

- Can have any number of EC2 instances in a security group
- Can have multiple security groups attached to an EC2 instances 
- Can only specify "ALLOW" rules in a Security Group 
    - default of a SECURITY GROUP is to "DENY" everything


# EBS

- Elastic Block Store 
    - persistent block storage volumes for EC2 instances
        - virtual hard disk in cloud
    - automatically replicated within its Availability Zone

5 Types of EBS Storage:
    - General Purpose (SSD)
    - Provisioned IOPS (SSD)
    - Throughput Optimised Hard Disk Drive  (Physical Magnetic drive)
    - Cold Hard Disk Drive
    - Magnetic


             |---------------Solid State DrivesSSD ------------|----------------- Hard Disk Drives HDD --------------------|
Volume Type  |        General                 Provisioned      |  Throughput              Cold                  EBS        |
             |        Purpose SSD             IOPS SSD         |  Optimized SSD           HDD                   Magnetic   |
             |                                                 |                                                           |
Desc         |        general purpose          Highest         | Low Cost HDD             Low Cost HDD          previous   | 
             |balances price / performance     Performance SSD | freq access,             less freq             generation | 
             |wide variety of transactions     mission critical| thruput intensive        accessed workloads    HDD        |
             |                                                 |                                                           |
             |                                                 |                                                           |
Use Cases    |  most work loads               Databases        | Big Data &               File Servers        Infreq access|
             |                                                 | Datawarehouses                                workloads   |    
             |                                                 |                                                           |
API Name     |         gp2                       io1           |     st1                    sc1                 standard   | 
             |                                                 |                                                           |
Volume Size  |      1 GB - 16 TB              4 GB - 16 TB     | 500 GB - 16 TB           500 GB - 16 TB       1GB - 1 TB  |
             |                                                 |                                                           |
Max IOPS /   |        16,000                    64,000         |     500                      250               40 - 200   |
Volume       |---------------Solid State DrivesSSD ------------|----------------- Hard Disk Drives HDD --------------------|





# EBS Volumes and Snapshots

- EBS and EC2 instances are in the same AZ

- root EBS volumes destroyed when instance is destroyed
    - attached non-root volumes persist when instance terminated

- can change size of drive on the fly (have to extend file system to get the additional storage)

- can change the volume type (ex. gp3 to iop) on the fly

Exam question:  how to move volume and ec2 instance to another AZ
    > volumes > select volume > create snapshot

    > created snapshot > create image
        NOTE: set Virtualization Type as "Hardware-assisted virtualization"
             Allows for greater selection of EC2 instance types

Once image is created:
    > AMIs > select created image >  Launch > choose new AZ to spin up into

NOTE: 
    AMI > copy AMI to a different region

Snapshots exist on S3
Snapshots are point in time copy of volumes
Snapshots are incremental 
    - only blocks that have changes since last snapshot are moved to S3

Can create AMIs from snapshots


# AMI Types (EBS vs Instance Store)

AMI factors: 
    - Region
    - OS
    - Architecture (32-bit or 64-bit)
    - Launch Perms
    - Storage for Root Device (Root Dev Vol)

    - Instance Store (Ephemeral Storage)
        - root device is instance store volume created from template stored in S3
        NOTE: instance store restricts type of instance types
                can only reboot or terminate in instance store ec2 instance 
                CANNOT STOP instance store e2c instance 
                If you stop instance store you will lose all data on that instance (EPHEMERAL storage)

    - EBS Backed Volumes
        - root device created from an EBS snapshot
        - EBS instance can be stopped without losing data
    
    Can reboot both Instance Store and EBS Backed Volumes wihout losing data

    Can keep EBS volume after termination, Instance Store loses all data

ENI vs ENA vs EFA 

ENI - Elastic Network Interface
     virtual network card 

EN  - Enhanced Networking  / Enhanced Networking Adapter
    Single root I/O virtualization  (SR-IOV)
    high performance netwoking on supported instance types 
    NOTE:  ENA is a subset of Enhanced Netowrking

EFA - Elastic Fabric  Adapter
    network device than can attached to EC2 instance to accelerate 
    High Performance Computing (HPC) and Machine Learning apps


ENI: virtual network card 
    - primary private IPv4 address from IPv4 address range
    - One or more secondare private IPv4 address from IPv4 address range
    - One Elastic IP address (IPv4) per private IPv4 address 
    - One public IPv4 address
    - One or more IPv6 addresses
    - One or more security groups
    - One MAC address
    - source / destination check flag
    - description

    - create a management network (separate traffice)
    - use network and security applianced in VPC
    - dual-homed instances with workloads / roles on distinct subnets
    - low budget, high availability solution


EN: Enahcned Networking 
    - single root I/O virtualization (SR-IOV)
        SR-IOV device virtualization provides hight I/O and lower CPU utilization 
         compared to traditional virtualized network interfaces

    - higher bandwidth, higher packet per second (PPS) performance, 
      lower inter-instance latencies.  
      NOTE: No additional changed for using enhanced networking
      user for good networking performance

    Depending on Instance type, enhanced networking enabled by: 

    Enhanced Network Adapter (ENA)  up to 100Gbps
    or
    Intel 82599 Virtual Function (VF) interface, supports up to 10 Gbps
     (older instances)


EFA: Elastic Frabric Adapter
    network device attach to EC2 instance to accelerate HPC and ML
    provides lower and more consistent latency and higher thruput than TCP transport
    EFA can us OS-bypass.  
        Allows apps to bypass OS kernel and communicate directly with EFA device
            (only Linux)


Encrypted Root Device Volumes & Snapshots

How to create an encrypted image from unencrypted volume

bring up ec2 instance > volumes > create snapshot:  my_unencrypted_snap 

snapshots > copy my_unencrypted_snap > 
    - check Encrypt this snapshot 
    - default key
        > my_encrypted_snap


snapshots > select  my_encrypted_snap  > create image > my_encrypted_image

AMI > select my_encrypted_image > Launch Instance

NOTE:  
- Snapshots of encrypted volumes are encrypted automatically
- Volumes restored from encrypted snapshots are encrypted automatically
- Can share snapshots but only if they are unencrypted
- snapshots can be shared with other AWS accounts / made public
- Can nore encrypt root device volumes upon creation of EC2 instance **


# Spot Instaces & Spot Fleets

Spot instance: 
 - take advantage of unused ec2 capacity with up to 90% discount of on-demand
     - can be used for stateless, fault-tolerage, flexible apps
       - containerized workloads
       - CI/CD, web servers, etc
       - image / rendering
       - HPC
       - analytics
    NOT GOOD FOR: 
       - persistent workloads
       - critical jobs
       - databases

 - decide on maximum spot price
    - instance provisioned as long as spot price is below your maximum spot price

 - hourly spot price varies hourly 

 - if spot price goes above your maximum, have 2 minutes to choose whether 
    to stop or terminate your instance

 - Spot block, stop spot instances from being terminated even if the spot price is 
    over your max spot price.   Spot Blocks only for 1 to 6 hours **



Spot Instance Termination 


                                                     +------below spot price ----> request failed
                                                     |
create requet -> [ Spot Request ]   -----------------+        +--------- stop ------+  
                   - max price                       |        v       (persistent)  |
                                                     |      start                   |
                   - # of instances                  |   (persistent)  interrupt <--+
                   - launch specification            |        |        (persistent) |
                   - request type:                   |        v                     |
                        - one time                   +------Launch instance --------+  
                        - persistent                                                |
                   - valid from / to                                            Interrupt
                                                                                (one-time)

NOTE:  if the request is one-time
             then once the price crosses it is terminated
       if the request is persistent
            then once the price crosses it is stopped
            if price comes back down the instance is started again
               until it is interrupted


Spot Fleet
    - collection of spot instances 
        and on-demand instance

    - spot fleet attempts to launch the number of spot instances and 
       on demand instances to satisfy the spot fleet target capacity 
                spot instances + on demand instances == spot fleet target capacity

    - tries to match target capacity with price restraint

    - setup different launc pools 
        - define: instance type, OS, AZ
        - Can have multiple pools
            - fleet will determine best way to implement strategy
        - spot fleets will stop launching instances once you reach price threshold 
            capacity desire state

Spot Fleet Strategies:
    - capacityOptimized
        spot instances come from pool with optimal capcity         
        for the number of instances launching

    - lowestPrice
        spot instances come from pool with lowest price

    - diversified
        spot instances are distributed across all pools

    - InstancePoosToUseCount
        spot instances are distributed across the number of 
        spot instance pools specified.  Only valid with lowestPrice
            like diversified + lowestPrice


# EC2 Hibernate
 - OS told to perform hibernation (suspend-to-disk)
 - saves contents from RAM to EBS root volume
 - root volume and attached EBS volumes are persisted

starting out of hibernation:
    - root volume restored to previous state
    - RAM contents are reloaded
    - processes previously running are resumed
    - previously attached data volumes are reattached 
       instance retains its instance ID
    - boots instance faster
        - don't have to restart OS or Apps

good for:
    - long running processes
    - services that take a long time to initialize


NOTE:   Instance RAM must be less than 150 GB in size.    **
        Instance Families:  C3, C4, C5, M3, M4, M5, R3, R4, R5
        Available for: Windows, Amazon Linux 2 AMI, Ubuntu
        CANNOT BE HIBERNATED FOR MORE THAN 60 DAYS 

# CloudWatch

 - monitoring services to monitor AWS resources as well as apps
 - performance monitoring:
    - Compute
        - EC2 instances
        - Autoscaling groups
        - Elastic Load Balancers
        - Route53 Health check
    - Storage 
        - EBS Volumes
        - Storage Gateway
        - CloudFront
EC2:
    - CPU
    - Network
    - Disk 
    - Status Check

CloudTrail:
    - camera into your AWS environment
    - user and resource activity
    - records Management Console actions and API Calls
        - which users / accounts called AWS
        - source IP address 
        - when called

CloudWatch:  monitors performance
CloudTrail:  monitors API calls in AWS platform

CloudWatch:
    - every 5 minutes by default   **
    - can have 1 minute intervals 
    - can create alarms to trigger notifications 

NOTE: 
    CloudWatch about PERFORMANCE
    CloudTrail about AUDITING


Can create regional and global dashboards
Can create alarms
Can send logs to CloudWatch    
    - aggregate, monitor and store logs
Events: near real-time stream of system events 
    - respond to state changes in AWS resources


# AWS CLI

spin up an instance 
run: aws configure 
  > asks for access key and secret access key

aws s3 ls   

aws s3 mb s3://knotknull.really-stupid-bucket-name

Secret directory --v

cd ~/.aws


[ec2-user@ip-172-31-61-160 .aws]$ ls -l
total 8
-rw-------. 1 ec2-user ec2-user  30 Nov  9 17:40 config
-rw-------. 1 ec2-user ec2-user 116 Nov  9 17:40 credentials

[ec2-user@ip-172-31-61-160 .aws]$ cat credentials
[default]
aws_access_key_id = AK.................D
aws_secret_access_key = a.............................X

[ec2-user@ip-172-31-61-160 .aws]$ cat config
[default]
region =  us-east-1


# IAM / AWS Roles

https://aws.amazon.com/blogs/security/new-attach-an-aws-iam-role-to-an-existing-amazon-ec2-instance-by-using-the-aws-cli/
https://aws.amazon.com/blogs/security/easily-replace-or-attach-an-iam-role-to-an-existing-ec2-instance-by-using-the-ec2-console/



Roles allow to interact with AWS without keys, etc.

IAM > create role > 
    Trusted Entity type:  AWS Service
    Use Case :  EC2
    [NEXT]
    Add Perms Policies: 
    [x] AdminAccess
    [CREATE]


To add a role to an existing EC2 instance: 
    EC2 > instance > Actions > Security > Modify IAM Role
    Choose Role 
    [ Update IAM Role]


NOTES: 
    - Roles more secure than access keys
    - Roles easier to manage
    - Roles can be assigned to EC2 instance at console and CLI
    - ROLES ARE UNIVERSAL, use them in any region


# Bootstrap Scripts

EC2 > Launch an instance > 
.
.
.
Advanced Details > 
User Data

put in commands or upload a file


# Instance Metadata


get metadata from ec2 instance

Address to get meta data from: http://169.254.169.254
     - IPv6 http://[fd00:ec2::254]/latest/user-data

OLD WAY :     **
curl http://169.254.169.254/latest/user-data

http://169.254.169.254/latest/meta-data/
http://169.254.169.254/latest/dynamic/
http://169.254.169.254/latest/user-data



NEW WAY (2024) :     **
TOKEN=`curl -X PUT "http://169.254.169.254/latest/api/token" -H "X-aws-ec2-metadata-token-ttl-seconds: 21600"` \
&& curl -H "X-aws-ec2-metadata-token: $TOKEN" http://169.254.169.254/latest/user-data

NOTE:  The above gets an api token first and then makes a second call with the token to get the user data 
. get token first:
    TOKEN=`curl -X PUT "http://169.254.169.254/latest/api/token" -H "X-aws-ec2-metadata-token-ttl-seconds: 21600"` 

use the TOKEN to call curl for metadata:

    curl -H "X-aws-ec2-metadata-token: $TOKEN" http://169.254.169.254/latest/user-data


all of the metadata you can query 
    curl -H "X-aws-ec2-metadata-token: $TOKEN" http://169.254.169.254/latest/metadata
    i.e. curl -H "X-aws-ec2-metadata-token: $TOKEN" http://169.254.169.254/latest/metadata/hostname

ami-id
ami-launch-index
ami-manifest-path
block-device-mapping/
events/
hostname
iam/
identity-credentials/
instance-action
instance-id
instance-life-cycle
instance-type
local-hostname
local-ipv4
mac
managed-ssh-keys/
metrics/
network/
placement/
profile
public-hostname
public-ipv4
public-keys/
reservation-id
security-groups
services/

Dynamic info:

TOKEN=`curl -X PUT "http://169.254.169.254/latest/api/token" -H "X-aws-ec2-metadata-token-ttl-seconds: 21600"` && curl -H "X-aws-ec2-metadata-token: $TOKEN" http://169.254.169.254/latest/dynamic/instance-identity/document
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100    56  100    56    0     0   6901      0 --:--:-- --:--:-- --:--:--  7000
{
  "accountId" : "709596356054",
  "architecture" : "x86_64",
  "availabilityZone" : "us-east-1b",
  "billingProducts" : null,
  "devpayProductCodes" : null,
  "marketplaceProductCodes" : null,
  "imageId" : "ami-063d43db0594b521b",
  "instanceId" : "i-0a1f63ada50c5f1a7",
  "instanceType" : "t2.micro",
  "kernelId" : null,
  "pendingTime" : "2024-11-09T21:09:23Z",
  "privateIp" : "172.31.53.155",
  "ramdiskId" : null,
  "region" : "us-east-1",
  "version" : "2017-09-30"
}[root@ip-172-31-53-155 ec2-user]# 


# EFS

Elastic File System 
 - file system for EC2 instances
 - capacity is elastic, do not have to pre-provision
 - for linux based 
 - like EBS 
    - EBS can only be mounted by one machine
    - EFS volume can be mounted by several machines

- on prem can access EFS via DirectConnect
- 2 performance modes:
    - general purpose 
    - max i/o

- EFA IA (Infreq. Access)
    - cheaper instance

- data redundant across multiple AZs


NOTE: ensure NFS protocol has been added to inbound rule  of the security group for the instance mounting the EFS



Create EFS cluster 

to mount on EC2 

sudo mount -t efs -o tls fs-0655fd1617d986dbd:/ efs


- EFS supports NFS v4 
- only pay for storage used
- scale up to petabytes
- can support 1000s of concurrent NFS connections
- Data store across multiple AZs within a region
- Consistency:  Read after Write

# FSx for Windows and Lustre







.